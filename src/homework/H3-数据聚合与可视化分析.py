###############################################
# 作业3: 数据聚合与可视化分析
#
# 本次作业将练习数据聚合和可视化分析操作。通过这些练习，你将掌握如何对数据进行分组分析，
# 并使用各种可视化方法直观地展示数据特征和趋势。
###############################################

###############################################
# 1. 导入必要的库
#
# 首先，我们需要导入以下库：
# - pandas: 用于数据处理和分析
# - matplotlib: 用于基础的数据可视化
# - numpy: 用于数值计算
###############################################

# 导入必要的库
# 在此处完成代码


# 设置中文显示
import matplotlib as mpl
mpl.rcParams['font.sans-serif'] = ['SimHei']
mpl.rcParams['axes.unicode_minus'] = False

###############################################
# 2. 读取数据文件
#
# 同样，我们需要读取`data\猫鸭账单_2025年.csv`文件，并进行必要的数据清洗。
###############################################

# 读取CSV文件
# 在此处完成代码


###############################################
# 3. 数据清洗
#
# 在进行聚合分析之前，我们需要对数据进行一些清洗：
# 1. 将"日期"列转换为日期时间类型
# 2. 将"流水"列转换为数值类型
# 3. 从"日期"列提取月份信息，并更新"月份"列
###############################################

# 将"日期"列转换为日期时间类型
# 在此处完成代码


# 清洗"流水"列，将其转换为数值类型
# 在此处完成代码
def format_flow(value):
    # 移除人民币符号、千位分隔符，并转换为浮点数
    
    return # 返回处理后的值

# 将函数应用到"流水"列上


# 从"日期"列提取月份信息，并更新"月份"列
# 在此处完成代码


###############################################
# 4. 按分类统计支出
#
# 现在，让我们按照"分类"统计支出金额，并按金额从大到小排序。
###############################################

# 筛选出所有支出记录
# 在此处完成代码


# 按"分类"分组，并计算每个分类的总支出金额
# 在此处完成代码


# 按支出金额从大到小排序
# 在此处完成代码


###############################################
# 5. 可视化分类支出占比
#
# 现在，让我们使用饼图可视化各个分类的支出占比。
###############################################

# 使用饼图可视化各个分类的支出占比
# 在此处完成代码
# 提示：使用plt.pie()函数，可以设置autopct参数来显示百分比


###############################################
# 6. 按月份统计支出
#
# 接下来，让我们按照月份统计支出金额，看看每个月的支出情况。
###############################################

# 按月份分组，并计算每个月的总支出金额
# 在此处完成代码


###############################################
# 7. 可视化月度支出趋势
#
# 现在，让我们使用柱状图可视化月度支出趋势。
###############################################

# 使用柱状图可视化月度支出趋势
# 在此处完成代码
# 提示：使用plt.bar()函数


###############################################
# 8. 按分类和月份统计支出
#
# 现在，让我们同时按照分类和月份统计支出金额，看看每个分类在不同月份的支出情况。
###############################################

# 同时按分类和月份分组，并计算每个组合的总支出金额
# 在此处完成代码


###############################################
# 9. 可视化分类月度支出趋势
#
# 让我们使用多系列柱状图可视化主要分类的月度支出趋势。为了简化，我们可以只展示支出最多的几个分类。
###############################################

# 筛选出支出最多的5个分类
# 在此处完成代码


# 使用多系列柱状图可视化主要分类的月度支出趋势
# 在此处完成代码
# 提示：可以使用plt.bar()函数，通过设置不同的位置参数来放置不同系列的柱子


###############################################
# 10. 计算每日平均支出
#
# 接下来，让我们计算每个月的每日平均支出。
###############################################

# 定义一个函数来计算每个月的天数
# 在此处完成代码
def days_in_month(year, month):
    # 导入calendar模块
    import calendar
    return calendar.monthrange(year, month)[1]

# 计算每个月的天数
# 在此处完成代码


# 计算每个月的每日平均支出
# 在此处完成代码


###############################################
# 11. 可视化每日平均支出趋势
#
# 现在，让我们使用折线图可视化每日平均支出趋势。
###############################################

# 使用折线图可视化每日平均支出趋势
# 在此处完成代码
# 提示：使用plt.plot()函数


###############################################
# 12. 计算支出的描述性统计
#
# 让我们计算支出的描述性统计，包括均值、中位数、最大值、最小值等。
###############################################

# 计算支出的描述性统计
# 在此处完成代码


###############################################
# 13. 可视化支出分布
#
# 让我们使用直方图可视化支出金额的分布情况。
###############################################

# 使用直方图可视化支出金额的分布情况
# 在此处完成代码
# 提示：使用plt.hist()函数，可以设置bins参数来控制直方图的桶数


###############################################
# 14. 计算每个分类的支出频率
#
# 现在，让我们计算每个分类的支出频率，即每个分类的支出记录数量。
###############################################

# 计算每个分类的支出频率
# 在此处完成代码


###############################################
# 15. 可视化支出频率
#
# 让我们使用水平条形图可视化支出频率，按频率从高到低排序。
###############################################

# 按频率从高到低排序
# 在此处完成代码


# 使用水平条形图可视化支出频率
# 在此处完成代码
# 提示：使用plt.barh()函数


###############################################
# 16. 计算收入与支出的月度平衡
#
# 最后，让我们计算每个月的收入总额、支出总额和净收入，并进行可视化。
###############################################

# 计算每个月的收入总额
# 在此处完成代码


# 计算每个月的支出总额
# 在此处完成代码


# 计算每个月的净收入（收入 - 支出）
# 在此处完成代码


# 将结果合并成一个DataFrame
# 在此处完成代码


###############################################
# 17. 可视化月度收支平衡
#
# 最后，让我们使用堆叠柱状图可视化月度收支平衡。
###############################################

# 使用堆叠柱状图可视化月度收支平衡
# 在此处完成代码
# 提示：可以使用plt.bar()函数，通过设置bottom参数来堆叠柱子


###############################################
# 完成！
#
# 恭喜你完成了第三次作业！通过这次作业，你应该已经掌握了如何对数据进行分组分析，
# 并使用各种可视化方法直观地展示数据特征和趋势。这些都是数据分析和可视化的重要技能，
# 可以帮助你更深入地理解数据，并有效地与他人交流你的发现。
############################################### 